services:
    postgres:
      image: postgres:17
      volumes:
        - pgdata:/var/lib/postgresql/data
      env_file:
      - .env.db
      ports:
        - "127.0.0.1:5432:5432"
      healthcheck:
        test:
          ['CMD', 'pg_isready', '-U', "postgres", '-d', "shop"]
        interval: 10s
        timeout: 5s
        retries: 5
      command: >
        postgres
        -c ssl=on
        -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
        -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
      restart: unless-stopped

    redis:
      image: redis:8
      ports:
        - "127.0.0.1:6379:6379"
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5
      restart: unless-stopped

    medusa-worker:
      build:
        context: ./abysswalker-store
        dockerfile: Dockerfile.worker
      depends_on:
        - postgres
        - redis
      env_file:
        - .env.backend
        - .env.db
      restart: unless-stopped
    
    medusa-server:
      build:
        context: ./abysswalker-store
        dockerfile: Dockerfile
      depends_on:
        - postgres
        - redis
      env_file:
        - .env.backend
        - .env.db
      restart: unless-stopped

    frontend:
      build:
        context: ./abysswalker-store-storefront
        dockerfile: Dockerfile
      depends_on:
        - medusa-server
      env_file:
        - .env.frontend
      restart: unless-stopped

    nginx:
      image: nginx:latest
      depends_on:
        - medusa-server
        - frontend
      ports:
        - "443:443"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        - /etc/letsencrypt/live/abysswalker.org/fullchain.pem:/etc/letsencrypt/live/abysswalker.org/fullchain.pem:ro
        - /etc/letsencrypt/live/abysswalker.org/privkey.pem:/etc/letsencrypt/live/abysswalker.org/privkey.pem:ro
        - ./ssl-cert-snakeoil.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem:ro
        - ./ssl-cert-snakeoil.key:/etc/ssl/private/ssl-cert-snakeoil.key:ro
      restart: unless-stopped

volumes:
  pgdata: